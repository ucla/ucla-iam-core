// General form and button elements adapted from http://purecss.io/forms/ & http://purecss.io/buttons/

// Note to self, add in elements cut for the SSO page

input, textarea, select {
  width: 100%;
  font-size: $h4-font-size;
  background: $input-background-color;
  margin-bottom: $default-spacing;
  border-radius: $global-border-radius;
}

select, input, textarea {
  padding: ($default-spacing * 0.4) $half-spacing ($default-spacing * 0.2);
  display: inline-block;
  border: 1px solid $neutral;
  box-shadow: inset 0 1px 3px lighten($neutral, 7%);
  border-radius: $global-border-radius;
}

select:focus, input:focus, textarea:focus {
  outline: 0;
  outline: thin dotted \9; /* IE6-9 */
  border-color: $form-valid-color;
  background: $input-background-color-focus;
}

select[disabled], input[disabled] {
  cursor: not-allowed !important;
  background-color: #eaeded;
  color: $neutral;
}

// styling when field is invalid and it has focus - just assume they're doing fine
input:focus:invalid:focus,
select:focus:invalid:focus {
  border-color: $form-invalid-color;
	color: $body-text-color;
}

// styling when field is invalid and it doesn't have focus - let people know, but not too aggressively on border/bg due to inputs not reached yet
input:invalid,
select:invalid {
  border-color: lighten($form-invalid-color, 25%);
	color: $form-invalid-color;
}

// styling when field is valid and it still has focus - focus border + success
input:focus:valid:focus,
select:focus:valid:focus {
	border-color: $form-valid-color;
	background: lighten($form-valid-color, 48%);
}

// styling when field is valid and the user has left it - subtle success
input:valid,
select:valid {
	background: lighten($form-valid-color, 48%);
}

::-webkit-input-placeholder {
  color: $neutral;
}

::-moz-placeholder {
  color: $neutral;
}

:-ms-input-placeholder {
  color: $neutral;
}

select[multiple] {
  height: auto;
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

legend {
  font-size: $h2-font-size;
  line-height: $base-line-height * 1.1;
  margin-bottom: $half-spacing;
  display: block;
  width: 100%;
  font-weight: normal;
  color: $primary-color-safe;
}

label {
  margin: $half-spacing 0;
}

.for-checkbox, .for-radio {
  display: block;
  input {
    margin-right: $half-spacing;
    margin-bottom: 0;
    width: auto;
    vertical-align: -1px;
  }
}

 input + .for-checkbox, input + .for-radio {
   margin-top: 0;
 }

 input + button, input + .button {
  margin-top: $half-spacing / 2;
}

button, .button {
  width: 100%;
  @include breakpoint($multi-column) {
    width: auto;
  }
  display: inline-block;
  margin: $half-spacing 0;
  zoom: 1;
  white-space: nowrap;
  vertical-align: baseline;
  text-align: center;
  cursor: pointer;
  -webkit-user-drag: none;
  user-select: none;
  font-family: inherit;
  font-size: 100%;
  padding: ($default-spacing * 0.7) ($default-spacing * 1.05);
  color: $anchor-color;
  border: 1px solid #999;  /*IE 6/7/8*/
  border: none rgba($black, 0);  /*IE9 + everything else*/
  background-color: $background-light-grey;
  text-decoration: none;
  border-radius: $global-border-radius;
  &:focus {
    outline: 0;
  }
  &:hover {
    background-color: $alternate-light-grey;
    text-decoration: none;
    color: $anchor-color-hover;
  }
  &:active {
    box-shadow: 0 0 0 1px rgba(0,0,0, 0.15) inset, 0 0 6px rgba(0,0,0, 0.20) inset;
  }
  a {
    text-decoration: none;
  }
}

/* Firefox: Get rid of the inner focus border */
button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

button[disabled] {
  border: none;
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  filter: alpha(opacity=40);
  opacity: 0.40;
  cursor: not-allowed;
  box-shadow: none;
}

.primary-button {
  background-color: $primary-color;
  color: $white;
  &:hover {
    background-color: $secondary-color;
    color: $ucla-blue-dark;
  }
}

.cancel-button:hover {
  background-color: mix($ucla-pink, $white, 80%);
  color: $white;
}
